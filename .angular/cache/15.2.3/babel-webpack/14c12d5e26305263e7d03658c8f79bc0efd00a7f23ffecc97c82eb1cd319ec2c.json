{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/ricky-morty.service\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(rickyMortyService) {\n    this.rickyMortyService = rickyMortyService;\n    this.title = 'Api Ricky Morty';\n    this.rickyMorty = []; // Asegurarse de que rickyMorty es un arreglo de Personaje\n    this.filtrercaracter = []; // Asegurarse de que filtrercaracter es un arreglo de Personaje\n    this.searchcaracter = ''; // Asegurarse de que searchcaracter sea un string\n    this.loading = true;\n  }\n  // Aca se obtiene la info de la API y se muestra en la vista html\n  ngOnInit() {\n    this.loading = true; // Establecer en true antes de cargar los datos\n    this.rickyMortyService.getRickyMorty().subscribe({\n      next: data => {\n        this.rickyMorty = data.results; // Asegurarse de que los datos sean un arreglo de Personaje\n        this.filtrercaracter = data.results;\n      },\n      error: error => {\n        console.log(error);\n      },\n      complete: () => {\n        console.log('Info de la API obtenida con éxito');\n        this.loading = false; // Establecer en false después de cargar los datos\n      }\n    });\n  }\n  // Aca se filtra la info de la API para poder buscarlo en la barra de busqueda y se muestra en la vista html\n  search() {\n    this.filtrercaracter = this.rickyMorty.filter(personaje => personaje.name.toLowerCase().includes(this.searchcaracter.toLowerCase()));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.RickyMortyService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container-fluid\"], [\"routerLink\", \"/home\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [\"routerLink\", \"/home\", 1, \"nav-link\"], [\"routerLink\", \"/about\", 1, \"nav-link\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Rick and Morty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵelement(5, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"ul\", 6)(8, \"li\", 7)(9, \"a\", 8);\n      i0.ɵɵtext(10, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\", 7)(12, \"a\", 9);\n      i0.ɵɵtext(13, \"Acerca de\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(14, \"router-outlet\");\n    }\n  },\n  dependencies: [i2.RouterOutlet, i2.RouterLink],\n  styles: [\".overlay[_ngcontent-%COMP%] {\\n    \\n    position: fixed;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    z-index: 9999;\\n}\\n\\nmat-progress-spinner[_ngcontent-%COMP%] {\\n    width: 100px;\\n    height: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrREFBa0Q7SUFDbEQsZUFBZTtJQUNmLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIub3ZlcmxheSB7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4NSk7ICovXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgei1pbmRleDogOTk5OTtcbn1cblxubWF0LXByb2dyZXNzLXNwaW5uZXIge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,YAAY;EAQvBC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAPrC,UAAK,GAAG,iBAAiB;IAEzB,eAAU,GAAgB,EAAE,CAAC,CAAC;IAC9B,oBAAe,GAAgB,EAAE,CAAC,CAAC;IACnC,mBAAc,GAAW,EAAE,CAAC,CAAC;IAC7B,YAAO,GAAG,IAAI;EAE6C;EAE3D;EACAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;IACrB,IAAI,CAACF,iBAAiB,CAACG,aAAa,EAAE,CAACC,SAAS,CAAC;MAC/CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,UAAU,GAAgBD,IAAI,CAACE,OAAO,CAAC,CAAC;QAC7C,IAAI,CAACC,eAAe,GAAGH,IAAI,CAACE,OAAO;MACrC,CAAC;MACDE,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MACDG,QAAQ,EAAE,MAAK;QACbF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,IAAI,CAACV,OAAO,GAAG,KAAK,CAAC,CAAC;MACxB;KACD,CAAC;EACJ;EAEA;EACAY,MAAM;IACJ,IAAI,CAACL,eAAe,GAAG,IAAI,CAACF,UAAU,CAACQ,MAAM,CAAEC,SAAS,IACtDA,SAAS,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACC,cAAc,CAACF,WAAW,EAAE,CAAC,CACzE;EACH;;AAjCWpB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,8BAAyD;MAEVA,8BAAc;MAAAA,iBAAI;MAC7DA,iCACiF;MAC/EA,0BAAyC;MAC3CA,iBAAS;MACTA,8BAAqD;MAGRA,qBAAI;MAAAA,iBAAI;MAEjDA,8BAAqB;MACqBA,0BAAS;MAAAA,iBAAI;MAQ/DA,iCAA+B","names":["AppComponent","constructor","rickyMortyService","ngOnInit","loading","getRickyMorty","subscribe","next","data","rickyMorty","results","filtrercaracter","error","console","log","complete","search","filter","personaje","name","toLowerCase","includes","searchcaracter","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Abdias\\Documents\\API-Rick-and-Morty-main\\src\\app\\app.component.ts","C:\\Users\\Abdias\\Documents\\API-Rick-and-Morty-main\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RickyMortyService } from './services/ricky-morty.service';\nimport { Personaje } from './api.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Api Ricky Morty';\n\n  rickyMorty: Personaje[] = []; // Asegurarse de que rickyMorty es un arreglo de Personaje\n  filtrercaracter: Personaje[] = []; // Asegurarse de que filtrercaracter es un arreglo de Personaje\n  searchcaracter: string = ''; // Asegurarse de que searchcaracter sea un string\n  loading = true;\n\n  constructor(private rickyMortyService: RickyMortyService) {}\n\n  // Aca se obtiene la info de la API y se muestra en la vista html\n  ngOnInit() {\n    this.loading = true; // Establecer en true antes de cargar los datos\n    this.rickyMortyService.getRickyMorty().subscribe({\n      next: (data) => {\n        this.rickyMorty = <Personaje[]>data.results; // Asegurarse de que los datos sean un arreglo de Personaje\n        this.filtrercaracter = data.results;\n      },\n      error: (error) => {\n        console.log(error);\n      },\n      complete: () => {\n        console.log('Info de la API obtenida con éxito');\n        this.loading = false; // Establecer en false después de cargar los datos\n      }\n    });\n  }\n\n  // Aca se filtra la info de la API para poder buscarlo en la barra de busqueda y se muestra en la vista html\n  search() {\n    this.filtrercaracter = this.rickyMorty.filter((personaje) =>\n      personaje.name.toLowerCase().includes(this.searchcaracter.toLowerCase())\n    );\n  }\n}","<!-- Menú de navegación -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" routerLink=\"/home\">Rick and Morty</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/home\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/about\">Acerca de</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<!-- Carga el contenido de las rutas -->\n<router-outlet></router-outlet> <!-- Asegúrate de tener este router-outlet para que se muestre el contenido según la ruta -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}